/// <reference types="node" />
/// <reference types="node" />
import { PeerCertificate } from 'tls';
export declare type gRPCRequest = {
    host: string;
    service: string;
    method: string;
    data: object | object[];
    metadata?: gRPCRequestMetadata;
    tls?: gRPCRequestTLS;
    beforeRequest?: (req: gRPCRequest) => void;
    afterResponse?: (res: gRPCResponse) => void;
};
export declare type gRPCRequestMetadata = {
    [key: string]: string | Buffer;
};
export declare type gRPCRequestTLS = {
    rootCerts?: string | Buffer;
    privateKey?: string | Buffer;
    certChain?: string | Buffer;
    verifyOptions?: VerifyOptions;
};
export declare type VerifyOptions = {
    checkServerIdentity?: CheckServerIdentityCallback;
};
export declare type CheckServerIdentityCallback = (hostname: string, cert: PeerCertificate) => Error | undefined;
export declare type gRPCResponse = {
    data: object | object[];
    size: number;
};
export declare function makeRequest(proto: string | string[], { beforeRequest, afterResponse, ...clientConfig }: gRPCRequest): Promise<gRPCResponse>;
